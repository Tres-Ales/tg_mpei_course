//https://leetcode.com/problems/maximum-depth-of-n-ary-tree/

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    int maxDepth(Node* root) {
         if (root == NULL)
        return 0 ;
    
    int depth = 0 ;
    queue<Node*> Q ;
    Q.push(root) ;
    
    while(!Q.empty())
    {
        int size = Q.size() ;
        while(size > 0)
        {
            Node* current = Q.front() ;
            Q.pop() ;
            for(auto child : current->children)
            {
                if (child != NULL)
                    Q.push(child) ;
            }
            size-- ;
        }
        depth++ ;
    }
    return depth ;    
    }
};
