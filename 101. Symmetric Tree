//https://leetcode.com/problems/symmetric-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool checkSymmetry(TreeNode* left, TreeNode* right) {
        if ((left == NULL) && (right == NULL))  {return true;}        
        if ((left == NULL) || (right == NULL))  {return false;}
        
        if (left->val != right->val)             
            return false;
        
        return checkSymmetry(left->left, right->right) && 
               checkSymmetry(left->right, right->left);                
    }
    
    bool isSymmetric(TreeNode* root) {
        
        if (NULL == root) {return true;}
       
        return checkSymmetry(root->left, root->right);
    }
};
